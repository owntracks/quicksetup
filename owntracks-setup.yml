---
- name: OwnTracks Quick Setup
  hosts: localhost
  connection: local
  gather_facts: true
  vars_files: configuration.yaml
  vars:
     ot_repo: "bookworm"
     packages:
        - lego
        - net-tools
        - mosquitto
        - mosquitto-clients
        - nginx
        - php-fpm
        - python3-passlib
        - jq
        - jo
        - lua5.4
        - lua-socket
        - lua-sec
        - python3-paho-mqtt
        - logrotate
        - python3-cryptography
        - cron
     override: "/etc/systemd/system/ot-recorder.service.d/override.conf"
     mosquitto_user: "mosquitto"
  tasks:

     - name: "system: template out sys.info"
       template:
          src: files/system/sys.info.j2
          dest: "./sys.info"
          mode: 0444

     - name: "verify some requirements"
       assert:
           that:
             - "ansible_version.full is version('2.4', '>=')"
             - "ansible_distribution_release in [ 'bookworm', 'jammy', 'mantic', 'noble' ]"
             - "'community.general.htpasswd' is community.general.a_module"
           # - "'community.crypto.x509_certificate_info' is community.crypto.a_module"

     - name: "detect: acme"
       set_fact:
           have_acme: "{{ email is defined | ternary(1, 0) | int }}"
           scheme: "{{ email is defined | ternary('https', 'http') }}"
       tags: nginx, lego


#                 _
#   ___ _   _ ___| |_ ___ _ __ ___
#  / __| | | / __| __/ _ \ '_ ` _ \
#  \__ \ |_| \__ \ ||  __/ | | | | |
#  |___/\__, |___/\__\___|_| |_| |_|
#       |___/

     - name: "system: install OwnTracks repository key"
       get_url:
          url: https://raw.githubusercontent.com/owntracks/recorder/master/etc/repo.owntracks.org.gpg.key
          dest: /etc/apt/trusted.gpg.d/owntracks.asc

     - name: "system: install OwnTracks repository"
       apt_repository:
          repo: "deb  http://repo.owntracks.org/debian {{ ot_repo }} main"
          state: present

     - name: "system: install required packages"
       apt:
          name: "{{ packages }}"
          update_cache: true

     - name: "system: create directories"
       file:
          path: "{{ item }}"
          state: directory
          mode: 0755
       loop:
          - "{{ otdir }}"
          - "{{ userdata }}"
          - "{{ otdir }}/tls"
          - "{{ otdir }}/lego"

     - name: "system: add passwords to userdata"
       set_fact:
          friends: "{{ friends | mkpasswords(otdir + '/userdata') }}"
       tags: web, pw, otrc

     - name: "system: create password files in userdata"
       copy:
          content: "{{ item.password | string + '\n' }}"
          dest: "{{ otdir }}/userdata/{{ item.username }}.pass"
          mode: 0400
       loop: "{{ friends | unique(case_sensitive=false, attribute='username') }}"
       loop_control:
           label: "{{ item.username }}"
       tags: web

     - name: "system: generate user .otrc files in userdata"
       template:
          src: files/otrc.j2
          dest: "{{ otdir }}/userdata/{{ item.username|lower }}-{{ item.devicename|lower }}.otrc"
          group: www-data
          mode: 0440
       loop: "{{ friends }}"
       loop_control:
           label: "{{ item.username|lower }}-{{ item.devicename|lower }}"
       tags: web, otrc

#                            __ _ _
#   _____      ____ _ _ __  / _(_) | ___
#  / __\ \ /\ / / _` | '_ \| |_| | |/ _ \
#  \__ \\ V  V / (_| | |_) |  _| | |  __/
#  |___/ \_/\_/ \__,_| .__/|_| |_|_|\___|
#                    |_|

     - name: "system: create swapfile"
       command: dd if=/dev/zero of=/swapfile bs=1M count=2048 creates=/swapfile
       register: swapcreated
       when: ansible_swaptotal_mb < 1

     - name: "system: set permissions on swapfile"
       file:
          path: /swapfile
          mode: 0600
       when: swapcreated.changed

     - name: "system: mkswap"
       command: mkswap /swapfile
       when: swapcreated.changed and (ansible_swaptotal_mb < 1)

     - name: "system: add swapfile to fstab"
       lineinfile:
          dest: /etc/fstab
          regexp: "swapfile"
          line: "/swapfile none swap sw 0 0"
          state: present
       when: swapcreated.changed and (ansible_swaptotal_mb < 1)

     - name: "system: activate swap"
       command: swapon -a
       when: swapcreated.changed


#   _
#  | | ___  __ _  ___
#  | |/ _ \/ _` |/ _ \
#  | |  __/ (_| | (_) |
#  |_|\___|\__, |\___/
#          |___/

     - block:
             - name: "lego: template out certificate/key installer"
               template:
                  src: files/lego/installcerts.sh.j2
                  dest: "{{ otdir }}/lego/installcerts.sh"
                  mode: 0555

             - name: "lego: template out enroller"
               template:
                  src: files/lego/enroll.sh.j2
                  dest: "{{ otdir }}/lego/enroll.sh"
                  mode: 0555

             - name: "lego: enroll at letsencrypt"
               command:
                  argv:
                     - "{{ otdir }}/lego/enroll.sh"

             - name: "lego: get certificate information"
               community.crypto.x509_certificate_info:
                   path: "{{ otdir }}/tls/cert.crt"
               register: cert

             - name: "lego: display enrolled certificate subject"
               debug:
                   msg: "Certificate Subject: {{ cert.subject.commonName }}"

             - name: "lego: install cron job for letsencrypt renewals"
               cron:
                  name: letsencrypt-ACME-certificate-renewal
                  minute: "{{ 59 | random(seed=dns_domain) }}"
                  hour: "04"
                  user: root
                  job: "[ -x {{ otdir }}/lego/enroll.sh ] && {{ otdir }}/lego/enroll.sh"
       when: 'have_acme|int'
       tags: lego



#                                   _ _   _        
#   _ __ ___   ___  ___  __ _ _   _(_) |_| |_ ___  
#  | '_ ` _ \ / _ \/ __|/ _` | | | | | __| __/ _ \ 
#  | | | | | | (_) \__ \ (_| | |_| | | |_| || (_) |
#  |_| |_| |_|\___/|___/\__, |\__,_|_|\__|\__\___/ 
#                          |_|                     

     - name: "mosquitto: template configuration for OwnTracks"
       template:
          src: files/mosquitto/owntracks.conf.j2
          dest: "{{ mosquittodir }}/conf.d/owntracks.conf"
          mode: 0444
          # validate: "mosquitto --test-config " # FIXME: in 2.1
       notify: restart_mosquitto

     - name: "mosquitto: build mosquitto.pw password file from user passwords"
       template:
          src: files/mosquitto/mosquitto.pw.j2
          dest: "{{ mosquittodir }}/mosquitto.pw"
          owner: "{{ mosquitto_user }}"
          group: root
          mode: 0440
       notify: restart_mosquitto

#     - name: Populate users in mosquitto.pw password file with generated passwords in *.pw
#       command:
#          argv:
#             - mosquitto_passwd
#             - -b
#             - "{{ mosquittodir }}/mosquitto.pw"
#             - "{{ item }}"
#             - "{{ lookup('password', item + '.pw') }}"
#       loop: "{{ [ 'recorder' ] + friends|map(attribute='username') }}"

     - name: "mosquitto: template mosquitto.acl"
       template:
          src: files/mosquitto/mosquitto.acl.j2
          dest: "{{ mosquittodir }}/mosquitto.acl"
          owner: "{{ mosquitto_user }}"
          group: root
          mode: 0440
          # validate: "mosquitto --test-config " # FIXME: in 2.1
       notify: restart_mosquitto

     - name: "mosquitto: ensure $HOME/.config/ exists"
       file:
          path: "{{ lookup('env', 'HOME') }}/.config"
          state: directory
          mode: 0755

     - name: "mosquitto: template $HOME/.config/mosquitto_sub"
       template:
          src: files/mosquitto/mosquitto_sub.j2
          dest: "{{ lookup('env', 'HOME') }}/.config/mosquitto_sub"
          mode: 0444

     - name: "mosquitto: template $HOME/.config/mosquitto_pub"
       template:
          src: files/mosquitto/mosquitto_pub.j2
          dest: "{{ lookup('env', 'HOME') }}/.config/mosquitto_pub"
          mode: 0444

     - name: "mosquitto: template out sample userpub program"
       template:
          src: files/mosquitto/userpub.py.j2
          dest: "/usr/local/bin/userpub"
          mode: 0755

     - name: "mosquitto: template out sample cardpub program"
       template:
          src: files/mosquitto/cardpub.sh.j2
          dest: "/usr/local/bin/cardpub"
          mode: 0755

#         _                                   _
#    ___ | |_      _ __ ___  ___ ___  _ __ __| | ___ _ __
#   / _ \| __|____| '__/ _ \/ __/ _ \| '__/ _` |/ _ \ '__|
#  | (_) | ||_____| | |  __/ (_| (_) | | | (_| |  __/ |
#   \___/ \__|    |_|  \___|\___\___/|_|  \__,_|\___|_|
#

     - name: "ot-recorder: install package"
       apt:
          name: "ot-recorder"
          state: latest
       notify: restart_recorder

     - name: "ot-recorder: template ot-recorder defaults file"
       template:
          src: files/recorder/ot-recorder.default.j2
          dest: "/etc/default/ot-recorder"
       notify: restart_recorder

     - name: "ot-recorder: check whether we need initialization"
       stat:
          path: "/var/spool/owntracks/recorder/store/ghash/data.mdb"
       register: mdb

     - name: "ot-recorder: initialize backend (nondestructive)"
       command:
          argv:
             - /usr/sbin/ot-recorder
             - --initialize
       when: not mdb.stat.exists

     - name: "ot-recorder: create service unit override directory"
       file:
          path: "/etc/systemd/system/ot-recorder.service.d"
          state: directory
          mode: 0755

     - name: "ot-recorder: populate systemd override file"
       copy:
          content: |
             [Service]
             # works as environment variable only (not in ot-recorder defaults)
             Environment="OTR_LMDBSIZE={{ 5 * 1024 * 1024 * 1024 }}"
          dest: "{{ override }}"
          mode: 0444
       when: override is not exists

     - name: "ot-recorder: add/delete keys for users which have them"
       shell:
          cmd: >
             printf "{{ item.username | lower }}-{{ item.devicename | lower }} {{ item.secret|default('DELETE') }}"
             | ocat --load=keys
       loop: "{{ friends }}"
       loop_control:
           label: "{{ item.username|lower }}-{{ item.devicename|lower }}"
       tags: web, pw

     - name: "ot-recorder: launch service"
       service:
           name: ot-recorder
           enabled: true
           state: started
#               _
#   _ __   __ _(_)_ __ __  __
#  | '_ \ / _` | | '_ \\ \/ /
#  | | | | (_| | | | | |>  <
#  |_| |_|\__, |_|_| |_/_/\_\
#         |___/

     - block:
         - name: "nginx: create idempotent random cookie value"
           set_fact:
              cookie_value: "{{ lookup('password', '{{ nginxdir }}/cookie-value.pw') }}"
           notify: restart_nginx

         - name: "nginx: add users to htpasswd"
           community.general.htpasswd:
              path: "{{ userdata }}/htpasswd"
              name: "{{ item.username }}"
              password: "{{ item.password }}"
              owner: root
              group: www-data
              mode: 0444
           loop: "{{ friends | unique(case_sensitive=false, attribute='username') }}"
           loop_control:
               label: "{{ item.username }}"

         - name: "nginx: template nginx.conf"
           template:
              src: files/nginx/nginx.conf.j2
              dest: "{{ nginxdir }}/nginx.conf"
              mode: 0444
           notify: restart_nginx

         - name: "nginx: template owntracks site configuration"
           template:
              src: files/nginx/owntracks.j2
              dest: "{{ nginxdir }}/sites-enabled/owntracks"
              mode: 0444
           notify: restart_nginx

#         - name: "nginx: generate dhparam file"
#           community.crypto.openssl_dhparam:
#              path: "{{ nginxdir }}/dh4096.pem
#              size: 4096
#              mode: 0444

         - name: "nginx: create owntracks/ directory in Web root"
           file:
              path: "{{ otweb }}"
              state: directory
              mode: 0755

         - name: "nginx: install OwnTrack's index.php"
           template:
              src: files/nginx/index.php.j2
              dest: "{{ otweb }}/index.php"
              mode: 0444
           tags: page

         - name: "nginx: install OwnTrack's logo into document root"
           copy:
              src: files/mosquitto/assets/logo-owntracks-grayscale-96x96.jpg
              dest: "{{ otweb }}/logo-owntracks-grayscale-96x96.jpg"
              mode: 0444
           tags: page

         - name: "nginx: install OwnTrack's otrc.php"
           template:
              src: files/nginx/otrc.php.j2
              dest: "{{ webroot }}/owntracks/otrc.php"
              mode: 0444
           tags: otrc

         - name: "nginx: install favicon.ico"
           copy:
              src: files/nginx/favicon.ico
              dest: "{{ webroot }}/favicon.ico"
              mode: 0444

       tags: nginx

#    __                 _                 _ 
#   / _|_ __ ___  _ __ | |_ ___ _ __   __| |
#  | |_| '__/ _ \| '_ \| __/ _ \ '_ \ / _` |
#  |  _| | | (_) | | | | ||  __/ | | | (_| |
#  |_| |_|  \___/|_| |_|\__\___|_| |_|\__,_|
#                                           

     - name: "frontend: ensure directory is removed before upgrade"
       file:
          path: "{{ otweb }}/frontend"
          state: absent
       tags: fe

     - name: "frontend: create frontend/ directory in Web root"
       file:
          path: "{{ otweb }}/frontend"
          state: directory
          mode: 0755
       tags: fe

     - name: "frontend: unpack dist"
       unarchive:
          src: files/frontend/frontend-dist.tar.gz
          dest: "{{ otweb }}/frontend"
          remote_src: no
       tags: fe


     - name: "frontend: template out config.js"
       template:
          src: files/frontend/config.js.j2
          dest: "{{ otweb }}/frontend/config/config.js"
          mode: 0444
       tags: fe

#   _                     _ _
#  | |__   __ _ _ __   __| | | ___ _ __ ___
#  | '_ \ / _` | '_ \ / _` | |/ _ \ '__/ __|
#  | | | | (_| | | | | (_| | |  __/ |  \__ \
#  |_| |_|\__,_|_| |_|\__,_|_|\___|_|  |___/
#

  handlers:

     - name: restart_mosquitto
       service:
           name: mosquitto
           state: restarted

     - name: restart_nginx
       service:
           name: nginx
           state: restarted

     - name: restart_recorder
       service:
           name: ot-recorder
           state: restarted
